name: Document Workflow

on:
  discussion:
    types:
      - created

jobs:
  get_info:
    if: >-
      github.event.discussion.category.name == 'Prompt'
    runs-on: ubuntu-latest
    outputs:
      prompt_validation: ${{ steps.prompt_validation.outputs.validation }}
      disc_body: ${{ steps.prompt.outputs.disc_body }}
      disc_title: ${{ steps.prompt.outputs.disc_title }}
      repo_ID: ${{ steps.prompt.outputs.repo_ID }}
      disc_labels: ${{ steps.prompt.outputs.disc_labels }}
      disc_ID : ${{ steps.prompt.outputs.disc_ID }}
      labels_ID : ${{ steps.label_id.outputs.label_id }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get discussion information
        id: prompt
        uses: ./actions/discussionworkflow/eventmetadata
        with:
          PAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Validation prompt with schema
        uses: sidharth-14/prompt_validation@main
        id: prompt_validation
        with:
          body: ${{ steps.prompt.outputs.disc_body }}
          title: ${{ steps.prompt.outputs.disc_title }}
          labels: ${{ steps.prompt.outputs.disc_labels }}

      - name: Get discussion labels ids
        uses: sidharth-14/labelsetting@main
        id: label_id
        with:
          PAT: ${{ secrets.GITHUB_TOKEN }}
          disc_labels: ${{ steps.prompt.outputs.disc_labels }}    

  Blurb_Discussion:
    if: needs.get_info.outputs.prompt_validation == 'valid' 
    runs-on: ubuntu-latest
    needs: get_info
    steps:
      - name: conditional test
        run: echo "hello team"
      
      - name: Use Chatgpt Api
        id: chatgpt
        uses: ./actions/gptworkflow/gptapi
        with:
          api_key: ${{ secrets.API_KEY }}
          prompt: ${{ needs.get_info.outputs.disc_body }}
          
      - name: Debug Labels
        run: echo "Labels:${{ needs.get_info.outputs.disc_labels }}"

      - name: Create a new GitHub Discussion
        id: create-discussion
        uses: abirismyname/create-discussion@v1.1.0
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: ${{ needs.get_info.outputs.disc_title }}
          body: ${{ steps.chatgpt.outputs.body }}
          repository-id: ${{ needs.get_info.outputs.repo_ID }}
          category-id: DIC_kwDOKIIfcc4CYvYw
          labels: ${{ needs.get_info.outputs.disc_labels }}
